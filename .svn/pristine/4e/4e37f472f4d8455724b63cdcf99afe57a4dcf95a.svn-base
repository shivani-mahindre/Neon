package com.pageFactory.desktopMecca;

import java.awt.print.Printable;
import java.util.Properties;
import java.util.Random;

import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.remote.server.handler.FindElement;
import org.testng.annotations.Test;

import ru.yandex.qatools.allure.annotations.Description;
import ru.yandex.qatools.allure.annotations.Title;

import com.generic.Pojo;
import com.generic.Utilities;
import com.generic.WrapperFunctions;
import com.itextpdf.text.log.SysoCounter;
import com.sun.jna.platform.unix.X11.Screen;

public class DepositWithdraw_TransactionLimitValidation_PF {
	private Utilities objUtilities;
	private WrapperFunctions objWrapperFunctions;
	WebDriver webdriver;
	Properties objConfig=new Properties();
	String user="";
	Screen objScreen;
	double minDeposit=10,maxDeposit=15,minWithdraw=10,maxWithdraw=15;
	
	
	
	public DepositWithdraw_TransactionLimitValidation_PF(Pojo pojo)
	{
		objUtilities = pojo.getObjUtilities();
		objScreen = new Screen();
		//System.out.println("Usernmme->>"+user);
		objWrapperFunctions = pojo.getObjWrapperFunctions();
		user=pojo.getUser();
		System.out.println("Usernmme->>"+user);
	}
	
	  
	// PAM credentials
	private  By PAMUsername =By.xpath("//input[@id='usernameEmail']");
	private  By PAMpassword =By.xpath("//input[@id='password']");
	private  By loginSubmitBtn =By.xpath("//button[@id='loginSubmit']");
	private By searchBox=By.xpath("//input[@id='unifiedSearch']");
	private By searchButton=By.xpath("//button[@id='unifiedSubmit']");
	private By statusID=By.xpath(".//*[@id='ContentMain']/div/div/main/player-summary/div/div[4]/div[1]/div/dl[3]/dd[3]");
	private By selectStatus=By.xpath(".//*[@id='s2id_autogen1']/a");
	private By statusToBeSelected=By.xpath("//span[@class='option option-passed'][contains(.,'Passed')]");

	private By textArea=By.xpath("//textarea[@id='playerNote']");
	private By nextButton=By.xpath("//a[contains(.,'Next')]");
	private By changeLimit=By.xpath("//span[contains(.,'Change Limits')]");
	private By transactionLimitsTab=By.xpath("//label[contains(.,'Transaction Limits')]");	
	
	private By minDepositLimittextBox=By.xpath("//input[@data-limit-type='MinimumDeposit']");
	private By maxDepositLimittextBox=By.xpath("//input[@data-limit-type='MaximumDeposit']");
	private By minWithdrawLimittextBox=By.xpath("//input[@data-limit-type='MinimumWithdrawal']");
	private By maxWithdrawLimittextBox=By.xpath("//input[@data-limit-type='MaximumWithdrawal']");
	private By applyBtn=By.xpath("//a[contains(.,'Apply')]");
	private By confirmBtn=By.xpath("//a[contains(.,'Confirm')]");
	
	
	public void transactionLimitBE()
	 {
		 	objUtilities.logReporter("Enter username :", objWrapperFunctions.setText(PAMUsername, "SQS_RDeote"), false);
		    objUtilities.logReporter("Enter Password :", objWrapperFunctions.setText(PAMpassword, "C3rg7EDi"), false);
		    objUtilities.logReporter("Click on 'Login' Button ", objWrapperFunctions.click(loginSubmitBtn), false);
		    objUtilities.logReporter("Search user ", objWrapperFunctions.setText(searchBox, user), false);
		    objUtilities.logReporter("Click on search button", objWrapperFunctions.click(searchButton), false);
		    objUtilities.logReporter("Click on Status ID", objWrapperFunctions.click(statusID), false);
		    objUtilities.logReporter("Select Status from dropdown list", objWrapperFunctions.click(selectStatus), false); 
		    objUtilities.logReporter("Select Status -'Passed' from dropdown list", objWrapperFunctions.click(statusToBeSelected), false);
		    if(objWrapperFunctions.verifyIsElementPresent(textArea))
		    {
		    	objUtilities.logReporter("Add comment ", objWrapperFunctions.setText(textArea,"testing status"),false);
		    }
		    else
		    {
		    	System.out.println("No text Are present continue clcik on Next");
		    }
		    objUtilities.logReporter("Click on netx button", objWrapperFunctions.click(nextButton), false);
		    objUtilities.logReporter("Click on Confirm button", objWrapperFunctions.click(confirmBtn), false);
		    objWrapperFunctions.waitForElementPresence(changeLimit);
		    objUtilities.logReporter("Click on Change limit Tab", objWrapperFunctions.click(changeLimit), false);   
		    objUtilities.logReporter("Click on transactionLimitsTab button", objWrapperFunctions.click(transactionLimitsTab), false);
		    objUtilities.logReporter("Set minDepositLimittextBox ", objWrapperFunctions.setText(minDepositLimittextBox, "10"), false);
		    objUtilities.logReporter("Set maxDepositLimittextBox ", objWrapperFunctions.setText(maxDepositLimittextBox, "15"), false);
		    objUtilities.logReporter("Set minWithdrawLimittextBox ", objWrapperFunctions.setText(minWithdrawLimittextBox, "10"), false);
		    objUtilities.logReporter("Set maxWithdrawLimittextBox ", objWrapperFunctions.setText(maxWithdrawLimittextBox, "15"), false);
		    objUtilities.logReporter("Click on applyBtn button", objWrapperFunctions.click(applyBtn), false);
		    objUtilities.logReporter("Click on confirmBtn button", objWrapperFunctions.click(confirmBtn), false);
		    
		    
	 }
	public void transactionLimitFE() 
	{
		
		
     }
	
}
